{% extends 'base.html.twig' %}

{% block body %}
    <div class="page-wrapper">
        <nav class="navbar">
            <div class="logo">
                <img src="https://img.edilportale.com/product-thumbs/b_prodotti-128332-relf71b16b9e91e4f1bab182d5fa397b156.jpg" alt="MySpotify Logo">
                <span>MySpotify</span>
            </div>
            <div class="search-bar">
                <input type="text" placeholder="¬øQu√© quieres reproducir?">
                <button onclic="buscarCancion()">Buscar</button>    
            </div>
            <div class="user-profile">
                <img src="https://img.edilportale.com/product-thumbs/b_prodotti-128332-relf71b16b9e91e4f1bab182d5fa397b156.jpg" alt="Perfil">
            </div>
        </nav>

        <div class="container">
            <aside class="sidebar">
                <ul>
                    <li class="active">Canciones</li>
                    <li>Playlist</li>
                </ul>
            </aside>

            <main class="content">
                <h1>Tus canciones</h1>
                <div class="songs-grid" id="songsContainer">
                    {% for cancion in canciones %}
                        <div class="song-card" id="{{cancion.titulo}}" onclick="playSound('{{cancion.titulo}}')">
                            <img class="song-image" 
                                src="https://img.edilportale.com/product-thumbs/b_prodotti-128332-relf71b16b9e91e4f1bab182d5fa397b156.jpg" 
                                style="width: 10em;">
                            <br>
                            {{cancion.titulo}}
                        </div>
                    {% endfor %}
                </div>
            </main>
        </div>

        <footer class="main-footer">
            <p>¬© 2025 MySpotify - Todos los derechos reservados.</p>
        </footer>
    </div>

    <div class="audio-player">
        <div class="player-content">
            <div class="now-playing">
                <span id="currentSong">No hay canci√≥n reproduciendo</span>
            </div>
            <div class="controls">
                <button onclick="togglePlay()" id="playPauseBtn">‚ñ∂</button>
            </div>
            <div class="progress-container">
                <span id="currentTime">0:00</span>
                <div class="progress-bar">
                    <div id="progress"></div>
                </div>
                <span id="duration">0:00</span>
            </div>
            <div class="volume-control">
                <span>üîä</span>
                <input type="range" id="volume-slider" min="0" max="100" value="100">
            </div>
        </div>
        <audio id="audioPlayer">
            <source src="" type="audio/mpeg">
            Tu navegador no soporta el elemento audio.
        </audio>
    </div>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: #121212;
            color: white;
        }

        /* Navbar styles */
        .navbar {
            background-color: #1DB954;
            padding: 1rem 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo img {
            width: 32px;
            height: 32px;
        }

        .search-bar {
            flex: 0 1 400px;
            display: flex;
            gap: 0.5rem;
        }

        .search-bar input {
            flex: 1;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
        }

        .search-bar button {
            padding: 0.5rem 1rem;
            background-color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .user-profile img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
        }

        /* Container layout */
        .container {
            display: flex;
            min-height: calc(100vh - 140px);
        }

        /* Sidebar styles */
        .sidebar {
            width: 200px;
            background-color: #000000;
            padding: 2rem 1rem;
        }

        .sidebar ul {
            list-style: none;
        }

        .sidebar li {
            padding: 0.75rem 1rem;
            cursor: pointer;
            border-radius: 4px;
        }

        .sidebar li:hover, .sidebar li.active {
            background-color: #282828;
        }

        /* Main content styles */
        .content {
            flex: 1;
            padding: 2rem;
            display: flex;
            flex-direction: column;
        }

        .content h1 {
            margin-bottom: 2rem;
            font-size: 2rem;
        }

        /* Songs grid */
        .songs-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 2rem;
            justify-content: center;
            align-items: center;
            width: 100%;
        }

        .song-card {
            background-color: #282828;
            padding: 1rem;
            border-radius: 8px;
            transition: background-color 0.3s ease;
            cursor: pointer;
            width: 200px;
            margin: 0;
        }

        .song-card:hover {
            background-color: #383838;
        }

        .song-image {
            width: 100%;
            aspect-ratio: 1;
            background-color: #181818;
            margin-bottom: 1rem;
            border-radius: 4px;
            overflow: hidden;
        }

        .song-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .song-card h3 {
            font-size: 1rem;
            font-weight: 500;
        }


        .audio-player {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: #282828;
            padding: 1rem;
            z-index: 1000;
        }

        .player-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .now-playing {
            flex: 1;
            color: white;
            font-size: 0.9rem;
        }

        .controls {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .controls button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.5rem;
        }

        .progress-container {
            flex: 2;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: white;
            font-size: 0.8rem;
        }

        .progress-bar {
            flex: 1;
            height: 4px;
            background-color: #4f4f4f;
            border-radius: 2px;
            overflow: hidden;
        }

        #progress {
            width: 0;
            height: 100%;
            background-color: #1DB954;
            transition: width 0.1s linear;
        }

        .volume-control {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: white;
        }

        #volume-slider {
            width: 100px;
            accent-color: #1DB954;
        }

        /* Adjust main container to account for player height */
        .container {
            margin-bottom: 80px;
        }

        /* Footer styles */
        footer {
            padding: 1rem 2rem;
            background-color: #181818;
            text-align: center;
            font-size: 0.875rem;
            color: #b3b3b3;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
                padding: 1rem;
            }

            .song-card {
                width: 150px;
            }
        }

        .page-wrapper {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            padding-bottom: 80px; /* Altura del audio player */
        }

        .container {
            flex: 1;
            display: flex;
            min-height: 0;
        }

        .main-footer {
            background-color: #181818;
            padding: 1rem 2rem;
            text-align: center;
            font-size: 0.875rem;
            color: #b3b3b3;
            width: 100%;
            position: relative;
        }

        .audio-player {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: #282828;
            padding: 1rem;
            z-index: 1000;
            height: 80px;
        }
    </style>

    <script>
        const audioPlayer = document.getElementById('audioPlayer');
        const progressBar = document.getElementById('progress');
        const currentTimeSpan = document.getElementById('currentTime');
        const durationSpan = document.getElementById('duration');
        const volumeSlider = document.getElementById('volume-slider');
        const playPauseBtn = document.getElementById('playPauseBtn');
        const currentSongSpan = document.getElementById('currentSong');

        function playSound(titulo) {
            // Aqu√≠ deber√≠as establecer la URL de la canci√≥n basada en el t√≠tulo
            const songUrl = `/cancion/${titulo}.mp3/play`;
            audioPlayer.src = songUrl;
            audioPlayer.play();
            currentSongSpan.textContent = titulo;
            playPauseBtn.textContent = '‚è∏';
        }

        function togglePlay() {
            if (audioPlayer.paused) {
                audioPlayer.play();
                playPauseBtn.textContent = '‚è∏';
            } else {
                audioPlayer.pause();
                playPauseBtn.textContent = '‚ñ∂';
            }
        }

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            seconds = Math.floor(seconds % 60);
            return `${minutes}:${seconds.toString().padStart(2, '0')}`;
        }

        audioPlayer.addEventListener('timeupdate', () => {
            const progress = (audioPlayer.currentTime / audioPlayer.duration) * 100;
            progressBar.style.width = progress + '%';
            currentTimeSpan.textContent = formatTime(audioPlayer.currentTime);
        });

        audioPlayer.addEventListener('loadedmetadata', () => {
            durationSpan.textContent = formatTime(audioPlayer.duration);
        });

        volumeSlider.addEventListener('input', (e) => {
            audioPlayer.volume = e.target.value / 100;
        });
    </script>

{% endblock %}